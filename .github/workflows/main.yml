name: Pack & Deploy

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-18.04
    name: Packing
    steps:

      - name: Checkout repository
        uses: actions/checkout@v1
        
      - name: Get Version
        id: vars
        run: |
          tag=${GITHUB_REF#refs/*/}
          tag=${tag#*v}
          echo ::set-output name=version::$tag
        
      - name: Setup .NET Core @ Latest
        uses: actions/setup-dotnet@v1

      - name: Build and Pack
        env:
          APP_NAME: ${{ github.event.repository.name }}
          APP_HOST: ${{ secrets.APP_HOST }}
          APP_PORT: ${{ secrets.APP_PORT }}
          APP_ENVIRONMENT: ${{ secrets.APP_ENVIRONMENT }}
          APP_SOLUTIONFILE: OK.Bitter.sln
          APP_CONFIGURATION: Release
          APP_VERSION: ${{ steps.vars.outputs.version }}
          DOCKER_SOURCE: docker.pkg.github.com
          DOCKER_USERNAME: ${{ github.event.repository.owner.login }}
          DOCKER_KEY: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_PATH: docker.pkg.github.com/${{ github.event.repository.full_name }}
        run: |
          bash ./build/build.sh
          bash ./build/publish.sh
      
      - name: Copy File
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: ./build/deploy.sh,./docker-compose.yml
          target: ~/build/${{ github.event.repository.name }}
        
      - name: Deploy
        uses: appleboy/ssh-action@master
        env:
          APP_NAME: ${{ github.event.repository.name }}
          APP_HOST: ${{ secrets.APP_HOST }}
          APP_PORT: ${{ secrets.APP_PORT }}
          APP_ENVIRONMENT: ${{ secrets.APP_ENVIRONMENT }}
          APP_SOLUTIONFILE: OK.Bitter.sln
          APP_CONFIGURATION: Release
          APP_VERSION: ${{ steps.vars.outputs.version }}
          DOCKER_SOURCE: docker.pkg.github.com
          DOCKER_USERNAME: ${{ github.event.repository.owner.login }}
          DOCKER_KEY: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_PATH: docker.pkg.github.com/${{ github.event.repository.full_name }}
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          envs: APP_NAME, APP_HOST, APP_PORT, APP_ENVIRONMENT, APP_SOLUTIONFILE, APP_CONFIGURATION, APP_VERSION, DOCKER_SOURCE, DOCKER_USERNAME, DOCKER_KEY, DOCKER_PATH, CONNECTION_STRING, DATABASE_NAME, BOT_TOKEN, ADMIN_PASSWORD
          script: |
            export APP_NAME=$APP_NAME
            export APP_HOST=$APP_HOST
            export APP_PORT=$APP_PORT
            export APP_ENVIRONMENT=$APP_ENVIRONMENT
            export APP_SOLUTIONFILE=$APP_SOLUTIONFILE
            export APP_CONFIGURATION=$APP_CONFIGURATION
            export APP_VERSION=$APP_VERSION
            export DOCKER_SOURCE=$DOCKER_SOURCE
            export DOCKER_USERNAME=$DOCKER_USERNAME
            export DOCKER_KEY=$DOCKER_KEY
            export DOCKER_PATH=$DOCKER_PATH
            export CONNECTION_STRING=$CONNECTION_STRING
            export DATABASE_NAME=$DATABASE_NAME
            export BOT_TOKEN=$BOT_TOKEN
            export ADMIN_PASSWORD=$ADMIN_PASSWORD
            cd ~/build/$APP_NAME
            bash ./build/deploy.sh
            cd ../
            rm -rf $APP_NAME